#!/bin/bash

# pipe="|"
# eval ls $pipe wc -l
# Shell是在变量替换之前处理管道和I/O重定向的, Shell第一次扫描命令行时会将
# pipe替换成对应的值|; 然后eval会使得Shell重新扫描命令行, 这时Shell识别出
# 了作为管道符号的|

# 在Shell程序中, eval常用于从变量中构造命令行; 如果变量中包含了任何必须由
# Shell解释的字符, 那就必须用到eval;
# 命令终止符(;、|、&)、I/O重定向（<、>）以及引号都属于这类字符, 必须直接出
# 现在命令行上, 只有这样Shell才能识别出它们的特殊含义;

# 显示程序传入的最后一个参数
eval echo \$$#

